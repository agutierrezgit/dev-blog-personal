---
// Theme Toggle Component
---

<button 
  class="theme-toggle-btn relative inline-flex items-center justify-center w-10 h-10 rounded-lg bg-gray-100 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 hover:bg-gray-200 dark:hover:bg-gray-600 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-white dark:focus:ring-offset-gray-800"
  aria-label="Toggle theme"
  type="button"
>
  <!-- Sun Icon (Light Mode) -->
  <svg 
    class="sun-icon w-5 h-5 text-yellow-500 transition-all duration-300 absolute transform scale-0 rotate-90 opacity-0"
    fill="currentColor" 
    viewBox="0 0 24 24"
  >
    <path d="M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z" />
  </svg>
  
  <!-- Moon Icon (Dark Mode) -->
  <svg 
    class="moon-icon w-5 h-5 text-blue-400 transition-all duration-300 absolute transform scale-100 rotate-0 opacity-100"
    fill="currentColor" 
    viewBox="0 0 24 24"
  >
    <path fill-rule="evenodd" d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z" clip-rule="evenodd" />
  </svg>
</button>

<script>
  // Initialize theme immediately to prevent flash
  const storedTheme = localStorage.getItem('theme');
  const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
  const theme = storedTheme || (prefersDark ? 'dark' : 'light');
  
  if (theme === 'dark') {
    document.documentElement.classList.add('dark');
  } else {
    document.documentElement.classList.remove('dark');
  }
  
  // Function to update all theme toggle instances
  function updateAllToggleIcons(isDark) {
    const sunIcons = document.querySelectorAll('.sun-icon');
    const moonIcons = document.querySelectorAll('.moon-icon');
    
    if (isDark) {
      // Show moon icons, hide sun icons
      sunIcons.forEach(sunIcon => {
        sunIcon.classList.remove('scale-100', 'rotate-0', 'opacity-100');
        sunIcon.classList.add('scale-0', 'rotate-90', 'opacity-0');
      });
      moonIcons.forEach(moonIcon => {
        moonIcon.classList.remove('scale-0', 'rotate-90', 'opacity-0');
        moonIcon.classList.add('scale-100', 'rotate-0', 'opacity-100');
      });
    } else {
      // Show sun icons, hide moon icons
      moonIcons.forEach(moonIcon => {
        moonIcon.classList.remove('scale-100', 'rotate-0', 'opacity-100');
        moonIcon.classList.add('scale-0', 'rotate-90', 'opacity-0');
      });
      sunIcons.forEach(sunIcon => {
        sunIcon.classList.remove('scale-0', 'rotate-90', 'opacity-0');
        sunIcon.classList.add('scale-100', 'rotate-0', 'opacity-100');
      });
    }
  }
  
  // Wait for DOM to be ready
  function initThemeToggle() {
    const themeToggleBtns = document.querySelectorAll('.theme-toggle-btn');
    
    if (themeToggleBtns.length === 0) {
      setTimeout(initThemeToggle, 10);
      return;
    }
    
    // Set initial icon state
    const isDarkMode = document.documentElement.classList.contains('dark');
    updateAllToggleIcons(isDarkMode);
    
    // Add click handler to all toggle buttons
    themeToggleBtns.forEach(themeToggle => {
      // Remove existing listeners to prevent duplicates
      themeToggle.removeEventListener('click', handleThemeToggle);
      themeToggle.addEventListener('click', handleThemeToggle);
    });
  }
  
  function handleThemeToggle() {
    const currentlyDark = document.documentElement.classList.contains('dark');
    
    if (currentlyDark) {
      // Switch to light mode
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
      updateAllToggleIcons(false);
    } else {
      // Switch to dark mode
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
      updateAllToggleIcons(true);
    }
  }
  
  // Start initialization
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initThemeToggle);
  } else {
    initThemeToggle();
  }
</script>
