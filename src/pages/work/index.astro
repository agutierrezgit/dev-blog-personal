---
import Header from "../../components/Header.astro"
import Layout from "../../layouts/Layout.astro"

interface WorkExperience {
	company: string
	role: string
	startDate: string
	endDate: string | null // null means current
	location: string
	description: string[]
	technologies: string[]
	achievements: string[]
	companySize: string
	industry: string
}

const workHistory: WorkExperience[] = [
	{
		company: "Google",
		role: "Senior Software Engineer",
		startDate: "2022-11-01",
		endDate: null, // Current job
		location: "Mountain View, CA",
		description: [
			"Lead frontend development for Google Cloud Console, serving millions of enterprise users daily.",
			"Architected and implemented a new design system that reduced development time by 40% across 15+ product teams.",
			"Mentored 6 junior engineers and established best practices for React and TypeScript development.",
			"Collaborated with UX designers and product managers to deliver high-impact features for cloud infrastructure management."
		],
		technologies: ["React", "TypeScript", "Node.js", "GraphQL", "Docker", "Kubernetes", "GCP"],
		achievements: [
			"Improved app performance by 60% through code splitting and lazy loading",
			"Led migration of legacy AngularJS codebase to modern React architecture",
			"Reduced bug reports by 45% through implementation of comprehensive testing strategy",
			"Received 'Exceptional Impact' performance rating for 2 consecutive years"
		],
		companySize: "100,000+ employees",
		industry: "Technology"
	},
	{
		company: "Apple",
		role: "Software Engineer II",
		startDate: "2020-01-15",
		endDate: "2022-10-31",
		location: "Cupertino, CA",
		description: [
			"Developed user-facing features for Apple's internal developer tools used by 50,000+ iOS developers.",
			"Built and maintained CI/CD pipelines that processed 10,000+ builds daily.",
			"Implemented real-time collaboration features using WebSockets and operational transforms.",
			"Worked closely with design teams to create intuitive developer experiences."
		],
		technologies: ["Swift", "JavaScript", "React", "Python", "Redis", "PostgreSQL", "AWS"],
		achievements: [
			"Shipped 3 major features that increased developer productivity by 25%",
			"Optimized build pipeline reducing average build time from 8 to 3 minutes",
			"Contributed to open source Swift libraries used by thousands of developers",
			"Presented technical talks at internal engineering conferences"
		],
		companySize: "150,000+ employees",
		industry: "Technology"
	},
	{
		company: "Stripe",
		role: "Frontend Engineer",
		startDate: "2018-06-01",
		endDate: "2019-12-31",
		location: "San Francisco, CA",
		description: [
			"Built and maintained Stripe Dashboard used by 1M+ businesses worldwide.",
			"Developed payment flow components handling billions of dollars in transactions.",
			"Collaborated with product and design teams to improve conversion rates and user experience.",
			"Participated in on-call rotation ensuring 99.9% uptime for critical payment systems."
		],
		technologies: ["React", "Ruby on Rails", "PostgreSQL", "Redis", "Sass", "Webpack"],
		achievements: [
			"Increased dashboard loading speed by 50% through performance optimizations",
			"Built A/B testing framework used across 20+ product experiments",
			"Reduced payment form abandonment rate by 15% through UX improvements",
			"Maintained 99.95% uptime during Black Friday peak traffic (10x normal volume)"
		],
		companySize: "1,000+ employees",
		industry: "FinTech"
	},
	{
		company: "Airbnb",
		role: "Junior Software Engineer",
		startDate: "2017-08-01",
		endDate: "2018-05-31",
		location: "San Francisco, CA",
		description: [
			"Developed features for Airbnb's host dashboard and listing management tools.",
			"Worked on search and discovery features to improve property matching algorithms.",
			"Collaborated with data scientists to implement ML-driven personalization features.",
			"Participated in code reviews and contributed to engineering culture initiatives."
		],
		technologies: ["React", "Node.js", "GraphQL", "MongoDB", "Elasticsearch", "Docker"],
		achievements: [
			"Shipped host onboarding flow that increased completion rate by 20%",
			"Implemented responsive design improving mobile conversion by 12%",
			"Contributed to design system adoption across 5 product teams",
			"Completed internal bootcamp program with top 10% performance"
		],
		companySize: "5,000+ employees",
		industry: "Travel Technology"
	}
]

// Calculate total experience
const calculateExperience = () => {
	const now = new Date()
	let totalMonths = 0
	
	workHistory.forEach(job => {
		const start = new Date(job.startDate)
		const end = job.endDate ? new Date(job.endDate) : now
		const months = (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth())
		totalMonths += months
	})
	
	const years = Math.floor(totalMonths / 12)
	const months = totalMonths % 12
	return { years, months, totalMonths }
}

// Format date for display
const formatDate = (dateString: string | null) => {
	if (!dateString) return "Present"
	const date = new Date(dateString)
	return date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' })
}

// Calculate duration for a job
const calculateDuration = (startDate: string, endDate: string | null) => {
	const start = new Date(startDate)
	const end = endDate ? new Date(endDate) : new Date()
	const months = (end.getFullYear() - start.getFullYear()) * 12 + (end.getMonth() - start.getMonth())
	const years = Math.floor(months / 12)
	const remainingMonths = months % 12
	
	if (years === 0) return `${months} month${months === 1 ? '' : 's'}`
	if (remainingMonths === 0) return `${years} year${years === 1 ? '' : 's'}`
	return `${years} year${years === 1 ? '' : 's'} ${remainingMonths} month${remainingMonths === 1 ? '' : 's'}`
}

const experience = calculateExperience()
const allTechnologies = [...new Set(workHistory.flatMap(job => job.technologies))]
---

<Layout title="Work Experience - Ceadria">
	<Header />
	
	<main class="max-w-4xl mx-auto px-6 py-12">
		<!-- Header Section -->
		<section class="mb-12">
			<div class="mb-6">
				<a href="/" class="text-blue-400 hover:text-blue-300 text-sm transition-colors inline-flex items-center">
					<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m0 0l8 8a1 1 0 010 1.414l-8 8z" />
					</svg>
					Back to home
				</a>
			</div>
			<h1 class="text-4xl md:text-5xl font-bold text-white mb-4">
				Work Experience
			</h1>
			<p class="text-gray-400 mb-8">
				{experience.years}+ years of professional software engineering experience
			</p>
		</section>

		<!-- Experience Summary -->
		<section class="mb-16">
			<div class="grid grid-cols-1 md:grid-cols-3 gap-6">
				<div class="bg-gray-800/30 rounded-lg p-6 text-center">
					<div class="text-3xl font-bold text-blue-400 mb-2">
						{experience.years}+
					</div>
					<div class="text-gray-400 text-sm">Years Experience</div>
				</div>
				<div class="bg-gray-800/30 rounded-lg p-6 text-center">
					<div class="text-3xl font-bold text-green-400 mb-2">
						{workHistory.length}
					</div>
					<div class="text-gray-400 text-sm">Companies</div>
				</div>
				<div class="bg-gray-800/30 rounded-lg p-6 text-center">
					<div class="text-3xl font-bold text-purple-400 mb-2">
						{allTechnologies.length}+
					</div>
					<div class="text-gray-400 text-sm">Technologies</div>
				</div>
			</div>
		</section>

		<!-- Timeline -->
		<section class="relative">
			<!-- Timeline line -->
			<div class="absolute left-8 top-0 bottom-0 w-px bg-gray-700"></div>
			
			<div class="space-y-12">
				{workHistory.map((job, index) => (
					<div class="relative">
						<!-- Timeline dot -->
						<div class={`absolute left-6 w-4 h-4 rounded-full border-2 ${
							job.endDate === null 
								? 'bg-blue-500 border-blue-400' 
								: 'bg-gray-700 border-gray-600'
						}`}></div>
						
						<!-- Job card -->
						<div class="ml-16">
							<div class={`p-6 rounded-lg ${
								job.endDate === null 
									? 'bg-blue-900/20 border border-blue-800/50' 
									: 'bg-gray-800/30'
							}`}>
								<!-- Header -->
								<div class="flex flex-col md:flex-row md:items-center justify-between mb-4">
									<div>
										<h3 class="text-xl font-bold text-white mb-1">
											{job.role}
										</h3>
										<div class="flex items-center gap-2 text-gray-300">
											<span class="font-medium">{job.company}</span>
											{job.endDate === null && (
												<span class="bg-green-800/30 text-green-300 px-2 py-1 text-xs rounded border border-green-700/50">
													Current
												</span>
											)}
										</div>
									</div>
									<div class="text-gray-400 text-sm mt-2 md:mt-0 text-left md:text-right">
										<div>{formatDate(job.startDate)} - {formatDate(job.endDate)}</div>
										<div class="text-xs">{calculateDuration(job.startDate, job.endDate)}</div>
										<div class="text-xs">{job.location}</div>
									</div>
								</div>

								<!-- Description -->
								<div class="mb-6">
									<ul class="space-y-2">
										{job.description.map(desc => (
											<li class="text-gray-300 text-sm leading-relaxed flex items-start">
												<span class="text-blue-400 mr-3 mt-1.5 flex-shrink-0">â€¢</span>
												{desc}
											</li>
										))}
									</ul>
								</div>

								<!-- Technologies -->
								<div class="mb-6">
									<h4 class="text-white font-medium mb-3 text-sm">Technologies Used</h4>
									<div class="flex flex-wrap gap-2">
										{job.technologies.map(tech => (
											<span class="bg-gray-700/50 text-gray-300 px-2 py-1 rounded text-xs border border-gray-600/50">
												{tech}
											</span>
										))}
									</div>
								</div>

								<!-- Key Achievements -->
								<div>
									<h4 class="text-white font-medium mb-3 text-sm">Key Achievements</h4>
									<ul class="space-y-2">
										{job.achievements.map(achievement => (
											<li class="text-gray-300 text-sm leading-relaxed flex items-start">
												<svg class="w-4 h-4 text-green-400 mr-2 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
													<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
												</svg>
												{achievement}
											</li>
										))}
									</ul>
								</div>

								<!-- Company info -->
								<div class="mt-4 pt-4 border-t border-gray-700/50 flex justify-between items-center text-xs text-gray-500">
									<span>{job.industry}</span>
									<span>{job.companySize}</span>
								</div>
							</div>
						</div>
					</div>
				))}
			</div>
		</section>

		<!-- Skills Summary -->
		<section class="mt-16 pt-8 border-t border-gray-800">
			<h2 class="text-2xl font-bold text-white mb-6">Technologies & Skills</h2>
			<div class="flex flex-wrap gap-2">
				{allTechnologies.map(tech => (
					<span class="bg-gray-800/50 text-gray-300 px-3 py-2 rounded-lg text-sm border border-gray-700/50">
						{tech}
					</span>
				))}
			</div>
		</section>

		<!-- Footer -->
		<footer class="mt-16 pt-8 border-t border-gray-800">
			<div class="flex justify-between items-center">
				<a href="/" class="text-blue-400 hover:text-blue-300 text-sm transition-colors inline-flex items-center">
					<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
						<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m0 0l8 8a1 1 0 010 1.414l-8 8z" />
					</svg>
					Back to home
				</a>
				<div class="text-gray-400 text-sm">
					Open to new opportunities and collaborations
				</div>
			</div>
		</footer>
	</main>
</Layout>
